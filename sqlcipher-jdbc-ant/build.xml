<?xml version="1.0" encoding="UTF-8"?>
<project name="sqlcipher-jdbc" default="sqlcipher-jdbc" basedir=".">
	<description>
	  sqlcipher jdbc
	</description>
	<!-- set global properties for this build -->
	<property name="version" value="0.1"/>
	<property name="manifest-version" value="0.1"/>
	<property name="src" location="src"/>
	<property name="build" location="build"/>
	<property name="dist"  location="dist"/>
	<property name="support.lib.dir" location="lib"/>
	<property name="bin.dir" location="bin"/>
	<property name="exec.dir" location="exec"/>
	<property name="core.dir" location="org/sqlite/core"/>
	<property name="ext.dir" location="org/sqlite/core"/>
	<property name="native.dir" location="native"/>
	<property name="native.ab.dir" location="C:/DEV/COMP/msys32/home/tobee/sqlcipher-build/sqlcipher-jdbc-ant/native"/>
	<property name="native.lib.name" value="sqlitejdbc.dll"/>
	
	<property name="native.package" location="org/sqlite/native/Windows/x86"/>
	<property name="manifest" value="MANIFEST.MF"/>
	
	<property name="main.class" value="org.sqlite.core.NativeDB"/>
	
	<property name="main.name" value="sqlcipher-jdbc"/>
	<property name="jar.name"  value="sqlcipher-jdbc"/>
	<property name="username"  value="tobee"/>
	<patternset id="native.files">
		<include name="**/*.dll" />
	</patternset>
   
	<path id="compile.classpath">
		<fileset dir="${support.lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
	</path>
 
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}"/>
	
	</target>
 
  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} option -source 1.4 -->
    <!--<javac srcdir="${src}" destdir="${build}" source="1.6" debug="true" encoding="EUC-KR">-->
    <javac srcdir="${src}" destdir="${build}" source="1.7" debug="true" encoding="UTF-8">
     <classpath refid="compile.classpath"/>
    </javac>
       
  </target>
  
  
  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>
    
   <delete file="${current.lib.dir}/${jar.name}.jar"/>
 
    <jar destfile="${dist}/lib/${jar.name}.jar"
         basedir="${build}"
         manifest="${manifest}">
       <manifest>
       	<attribute name="Main-Class"
                     value="${main.class}"/>
          <attribute name="Built-By"
                     value="${username}"/>
          <attribute name="Build-Jdk"
                     value="jdk1.8.0_111"/>
       
      </manifest>
        
      <fileset dir="${native.dir}">
  			<patternset refid="native.files" />
  		</fileset>
				
    </jar>
 
    <copy todir="${bin.dir}">
      <fileset dir="${dist}/lib">
        <include name="${jar.name}.jar"/>
      </fileset>
    </copy>
    
    <copy todir="${exec.dir}">
      <fileset dir="${dist}/lib">
        <include name="${jar.name}.jar"/>
      </fileset>
    </copy>
  </target>
  
 
	<target name="gen-jni">
		<echo message="generating JNI header" />
		<!--<javah destdir="${native.dir}" classpath="${build}" >-->			
		<javah outputFile="${native.dir}/NativeDB.h" classpath="${build}" >	
	
			<class name="org.sqlite.core.NativeDB" />
		</javah>
	</target>
  
  <property name="test.build.dir" value="tests/build"/>
  <property name="test.src.dir" value="tests/src"/>
  
  <path id="classpath.test">
    <pathelement location="lib/junit-4.5.jar"/>
    <pathelement location="${dist}/lib/${jar.name}.jar"/>
    <!--
    <pathelement location="lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${main.build.dir}"/>
    -->
  </path>
  
  <target name="test-compile" depends="compile">
    <mkdir dir="${test.build.dir}"/>
    <javac srcdir="${test.src.dir}" destdir="${test.build.dir}" includeantruntime="false">
        <classpath refid="classpath.test"/>
    </javac>
  </target>
  
  <target name="test" depends="test-compile">
  	 <copy todir="${test.build.dir}/org/sqlite">
      <fileset dir="${test.src.dir}/org/sqlite">
        <include name="testdb.jar"/>
        <include name="sample.db"/>
      </fileset>
    </copy>
	
	 <echo message="library..${native.ab.dir}"/>
	
	    
    <junit printsummary="on" haltonfailure="yes" fork="true">
    	
        <classpath>
          <path refid="classpath.test"/>
          <pathelement location="${test.build.dir}"/>
        </classpath>
        
        <!--<sysproperty key="java.library.path" path="${native.ab.dir}"/>-->
        <sysproperty key="org.sqlite.lib.path" path="${native.ab.dir}"/>
        <sysproperty key="org.sqlite.lib.name" value="${native.lib.name}"/>
       
        <formatter type="brief" usefile="false" />
        <batchtest>
            <fileset dir="${test.src.dir}" includes="**/*Test.java" />
        </batchtest>
    </junit>
  </target>
 
 <target name="sqlcipher-jdbc" depends="dist"
        description="make own jar file" >
  </target>
 
  <target name="clean"
        description="clean up" >
    <!-- <echo message="Hello, bin/${jar.name}.jar"/> -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete file="bin/${jar.name}.jar"/>
  </target>
  
  <target name="test-clean"
        description="test clean up" >
    <delete dir="${test.build.dir}"/>
  </target>
</project>
